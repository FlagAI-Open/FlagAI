{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为station，包含的属性为station.name,station.lat,station.city(SanJose),station.long,station.id;表名为status，包含的属性为status.docks_available,status.bikes_available,status.time,status.station_id;表名为trip，包含的属性为trip.end_station_id,trip.duration,trip.start_date,trip.id,trip.start_station_id;表名为weather，包含的属性为weather.mean_dew_point_f,weather.max_visibility_miles,weather.cloud_cover,weather.min_visibility_miles,weather.min_dew_point_f，它们之间的关系为 status.station_id = station.id\n请为下面的问题编写sql查询语句：\nWhat is the average latitude and longitude in San Jose? "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select avg ( lat ) , avg ( long ) from station where city = 'San Jose'\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为dorm，包含的属性为dorm.dorm_name,dorm.student_capacity,dorm.gender,dorm.dormid;表名为lives_in，包含的属性为lives_in.stuid,lives_in.room_number,lives_in.dormid;表名为dorm_amenity，包含的属性为dorm_amenity.amenid,dorm_amenity.amenity_name;表名为student，包含的属性为student.fname,student.age,student.major,student.advisor,student.sex，它们之间的关系为 lives_in.dormid = dorm.dormid , lives_in.stuid = student.stuid\n请为下面的问题编写sql查询语句：\nWhat is the student capacity and type of gender for the dorm whose name as the phrase Donor in it? "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select student_capacity , gender from dorm where dorm_name like '%Donor%'\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "如果你是一个数据专家，我这里有一个数据表，结构为： Institution，Location，Founded，Affiliation，Enrollment，Team Nickname，Primary conference；单位为: text，text，real，text，real，text，text\n输出下面问题的sql查询语句：Where is the university located that's nicknamed the Wolves?"}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n ```sql\nSELECT Location FROM table WHERE Team Nickname = Wolves\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为accounts，包含的属性为accounts.custid,accounts.name;表名为checking，包含的属性为checking.custid,checking.balance;表名为savings，包含的属性为savings.custid,savings.balance，它们之间的关系为 savings.custid = accounts.custid , checking.custid = accounts.custid\n请为下面的问题编写sql查询语句：\n查找支票余额低于最大支票余额的帐户的名称和id。 "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select accounts.custid , accounts.name from accounts join checking on accounts.custid = checking.custid where checking.balance < ( select max ( balance ) from checking )\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为review，包含的属性为review.rating,review.i_id,review.a_id,review.u_id,review.rank;表名为useracct，包含的属性为useracct.u_id,useracct.name;表名为item，包含的属性为item.title,item.i_id;表名为trust，包含的属性为trust.trust,trust.target_u_id,trust.source_u_id，它们之间的关系为 review.i_id = item.i_id , review.u_id = useracct.u_id , trust.target_u_id = useracct.u_id , trust.source_u_id = useracct.u_id\n请为下面的问题编写sql查询语句：\nFor each user, find their name and the number of reviews written by them. "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select useracct.name , count ( * ) from useracct join review on useracct.u_id = review.u_id group by review.u_id\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "数据表中包含属性为： Date，Opponent，Venue，Result，Attendance，Competition\n帮我生成sql语句:How many people attended the game that lost 2-4 and the date was higher than 15?"}, {"from": "gpt", "value": "根据您的问题生成SQL查询语句:\n ```sql\nSELECT COUNT Attendance FROM table WHERE Result = lost 2-4 AND Date > 15\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "有个数据表，它的结构为 Year，Class，Team，Points，Rank，Wins；单位为: real，text，text，real，text，real\n输出sql执行语句：What is the Class for a year later than 1958, with 4 points?"}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n ```sql\nSELECT Class FROM table WHERE Year > 1958 AND Points = 4\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为tourist_attractions，包含的属性为tourist_attractions.tourist_attraction_id,tourist_attractions.name,tourist_attractions.other_details,tourist_attractions.description,tourist_attractions.opening_hours;表名为visits，包含的属性为visits.tourist_attraction_id,visits.tourist_id,visits.visit_date,visits.visit_id,visits.visit_details;表名为theme_parks，包含的属性为theme_parks.theme_park_details,theme_parks.theme_park_id;表名为visitors，包含的属性为visitors.tourist_id,visitors.tourist_details(Vincent)，它们之间的关系为 theme_parks.theme_park_id = tourist_attractions.tourist_attraction_id , visits.tourist_id = visitors.tourist_id , visits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\n请为下面的问题编写sql查询语句：\nWhich tourist attractions does the visitor with detail 'Vincent' visit? "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select tourist_attractions.name from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id join visitors on visits.tourist_id = visitors.tourist_id where visitors.tourist_details = 'Vincent'\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为documents，包含的属性为documents.document_type_code,documents.project_id,documents.document_date,documents.other_details,documents.document_description;表名为ref_document_types，包含的属性为ref_document_types.document_type_description,ref_document_types.document_type_code,ref_document_types.document_type_name;表名为projects，包含的属性为projects.project_id,projects.project_details;表名为ref_budget_codes，包含的属性为ref_budget_codes.budget_type_code,ref_budget_codes.budget_type_description，它们之间的关系为 documents.project_id = projects.project_id , documents.document_type_code = ref_document_types.document_type_code\n请为下面的问题编写sql查询语句：\n列出文档类型代码和每个代码中的文档数量。 "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select document_type_code , count ( * ) from documents group by document_type_code\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "我有一个数据表，数据表包含属性为 Season，Champions，Runner-up，Third Place，Top Goalscorer，Club\n帮我生成sql语句：Who had third place when the champions is baník ostrava (1)?"}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n ```sql\nSELECT Third Place FROM table WHERE Champions = Baník Ostrava (1)\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "有个数据表，它的结构为 Series #，Season #，Title，Directed by，Written by，Original air date，U.S. viewers (millions)\n输出下面问题的sql查询语句：Who wrote \"Voir Dire\"?"}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n ```sql\nSELECT Written by FROM table WHERE Title = \"Voir Dire\"\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为products，包含的属性为products.name,products.price,products.manufacturer,products.code;表名为manufacturers，包含的属性为manufacturers.name,manufacturers.code,manufacturers.founder,manufacturers.headquarter,manufacturers.revenue，它们之间的关系为 products.manufacturer = manufacturers.code\n请为下面的问题编写sql查询语句：\n选择价格低于或等于200美元的产品名称。 "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select name from products where price <= 200\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_wikisql", "conversations": [{"from": "human", "value": "数据表中包含属性为： Birth Name，Birth Name As Announced in Latin (Accusative case Forename Undeclined Surname)，Papal Name，Papal Name As Announced in Latin，Latin declension of Papal Name，Numeral in Papal Name；单位为: text，text，text，text，text，text\n输出sql执行语句：What is the latin birth name of the pope announced as Ioannis Pauli Primi?"}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n ```sql\nSELECT Birth Name As Announced in Latin (Accusative case Forename Undeclined Surname) FROM table WHERE Papal Name As Announced in Latin = Ioannis Pauli primi\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
{"id": "sql_spider", "conversations": [{"from": "human", "value": "有多个数据库表，信息如下：\n表名为students，包含的属性为students.personal_name,students.login_name,students.middle_name,students.family_name,students.date_of_latest_logon;表名为subjects，包含的属性为subjects.subject_name,subjects.subject_id;表名为course_authors_and_tutors，包含的属性为course_authors_and_tutors.gender_mf,course_authors_and_tutors.address_line_1,course_authors_and_tutors.middle_name,course_authors_and_tutors.author_tutor_atb,course_authors_and_tutors.author_id;表名为courses，包含的属性为courses.course_description,courses.course_name,courses.course_id,courses.author_id,courses.subject_id，它们之间的关系为 courses.subject_id = subjects.subject_id , courses.author_id = course_authors_and_tutors.author_id\n请为下面的问题编写sql查询语句：\nFind the number of students who have the word \"son\" in their personal names. "}, {"from": "gpt", "value": "根据数据库信息和问题生成如下查询语句:\n```sql\n select count ( * ) from students where personal_name like '%son%'\n```\n您可以使用该语句进行查询。"}], "instruction": ""}
